mysql> create database Workers;
Query OK, 1 row affected (0.01 sec)

mysql> use Workers;
Database changed

mysql> CREATE TABLE Worker (
    -> WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    -> FIRST_NAME VARCHAR(25),
    -> LAST_NAME VARCHAR(25),
    -> SALARY INT(15),
    -> JOINING_DATE DATETIME,
    -> DEPARTMENT VARCHAR(25));
Query OK, 0 rows affected (0.02 sec)

mysql> INSERT INTO Worker (FIRST_NAME, LAST_NAME, SALARY, JOINING_DATE, DEPARTMENT) VALUES ('Monika', 'Singh', 100000, '14-02-20 09.00.00', 'HR'),
    -> ('Amruta', 'Dhumal', 200000, '20-02-20 09.00.00', 'HR'),
    -> ('Sanjivani', 'Kadam', 300000, '14-02-20 09.00.00', 'Admin'),
    -> ('Pranita', 'Kadam', 30000, '14-03-20 09.00.00', 'Manager'),
    -> ('Vipul', 'Diwan', 40000, '20-03-20 09.00.00', 'Account'),
    -> ('Amitabh', 'Singh', 50000, '14-03-20 09.00.00', 'Account'),
    -> ('Shivani', 'Shejawal', 50000, '22-03-20 09.00.00', 'Admin'),
    -> ('Shivani', 'Chauhan', 90000, '22-03-20 09.00.00', 'Admin');
Query OK, 8 rows affected (0.01 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> select * from Worker;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Singh     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Amruta     | Dhumal    | 200000 | 2020-02-20 09:00:00 | HR         |
|         3 | Sanjivani  | Kadam     | 300000 | 2014-02-20 09:00:00 | Admin      |
|         4 | Pranita    | Kadam     |  30000 | 2014-03-20 09:00:00 | Manager    |
|         5 | Vipul      | Diwan     |  40000 | 2020-03-20 09:00:00 | Account    |
|         6 | Amitabh    | Singh     |  50000 | 2014-03-20 09:00:00 | Account    |
|         7 | Shivani    | Shejawal  |  50000 | 2022-03-20 09:00:00 | Admin      |
|         8 | Shivani    | Chauhan   |  90000 | 2022-03-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

mysql> -- SQL QUESTIONS

mysql> -- 1) WRITE A QUERY TO FETCH THE FIRST_NAME FROM WORKER TABLE USING ALIAS NAME AS WORKER_NAME.

mysql> select FIRST_NAME as WORKER_NAME from Worker;
+-------------+
| WORKER_NAME |
+-------------+
| Monika      |
| Amruta      |
| Sanjivani   |
| Pranita     |
| Vipul       |
| Amitabh     |
| Shivani     |
| Shivani     |
+-------------+
8 rows in set (0.00 sec)

mysql> -- 2) WRITE A QUERY TO FETCH UNIQUE VALUES OF DEPARTMENT FROM THE WORKER TABLE.

mysql> select distinct(DEPARTMENT) from Worker;
+------------+
| DEPARTMENT |
+------------+
| HR         |
| Admin      |
| Manager    |
| Account    |
+------------+
4 rows in set (0.00 sec)

mysql> -- 3) WRITE A QUERY TO SHOW THE LAST 5 RECORDS FROM THE WORKER TABLE.

mysql> select * from Worker
    -> order by WORKER_ID desc
    -> limit 5;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         8 | Shivani    | Chauhan   |  90000 | 2022-03-20 09:00:00 | Admin      |
|         7 | Shivani    | Shejawal  |  50000 | 2022-03-20 09:00:00 | Admin      |
|         6 | Amitabh    | Singh     |  50000 | 2014-03-20 09:00:00 | Account    |
|         5 | Vipul      | Diwan     |  40000 | 2020-03-20 09:00:00 | Account    |
|         4 | Pranita    | Kadam     |  30000 | 2014-03-20 09:00:00 | Manager    |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.00 sec)

mysql> -- 4) WRITE A QUERY TO PRINT THE FIRST THREE CHARACTERS OF FIRST_NAME FROM WORKER TABLE.

mysql> select left(FIRST_NAME,3) as FIRST_NMAE_3_CHAR
    -> from Worker;
+-------------------+
| FIRST_NMAE_3_CHAR |
+-------------------+
| Mon               |
| Amr               |
| San               |
| Pra               |
| Vip               |
| Ami               |
| Shi               |
| Shi               |
+-------------------+
8 rows in set (0.00 sec)

mysql> -- 5) WRITE AN SQL QUERY TO FIND THE POSITION OF THE ALPHABET 'a' IN THE FIRST_NAME COLUMN 'Amitabh' FROM WORKER TABLE.

mysql> select locate("a" , "Amitabh",2);
+---------------------------+
| locate("a" , "Amitabh",2) |
+---------------------------+
|                         5 |
+---------------------------+
1 row in set (0.00 sec)

mysql> -- 6) WRITE A SQL QUERY TO PRINT THE FIRST NAME FROM THE WORKERS TABLE AFTER REMOVING WHITE SPACES FROM THE RIGHT SIDE.

mysql> select RTRIM(FIRST_NAME) as TRIMMED_FIRST_NAMES
    -> FROM Worker;
+---------------------+
| TRIMMED_FIRST_NAMES |
+---------------------+
| Monika              |
| Amruta              |
| Sanjivani           |
| Pranita             |
| Vipul               |
| Amitabh             |
| Shivani             |
| Shivani             |
+---------------------+
8 rows in set (0.00 sec)

mysql> -- 7) WRITE AN SQL QUERY THAT FETCHES THE UNIQUE VALUES OF DEPARTMENT FROM WORKER TABLE AND PRINTS ITS LENGTH.

mysql> select distinct(DEPARTMENT) as UNIQUE_DEPARTMENTS, LENGTH(DEPARTMENT) as LENGTH_OF_DEPT_NAMES
    -> from Worker;
+--------------------+----------------------+
| UNIQUE_DEPARTMENTS | LENGTH_OF_DEPT_NAMES |
+--------------------+----------------------+
| HR                 |                    2 |
| Admin              |                    5 |
| Manager            |                    7 |
| Account            |                    7 |
+--------------------+----------------------+
4 rows in set (0.01 sec)

mysql> -- 8) WRITE AN SQL QUERY TO PRINT THE FIRST_NAME COLUMN FROM THE WORKER TABLE AFTER REPLACING 'a' WITH 'A'.

mysql> select replace (FIRST_NAME, 'a','A') as REPLACED_NAME
    -> from Worker;
+---------------+
| REPLACED_NAME |
+---------------+
| MonikA        |
| AmrutA        |
| SAnjivAni     |
| PrAnitA       |
| Vipul         |
| AmitAbh       |
| ShivAni       |
| ShivAni       |
+---------------+
8 rows in set (0.01 sec)

mysql> -- 9) WRITE AN SQL QUERY TO PRINT ALL WORKER DETAILS FROM THE WORKER TABLE ORDER BY FIRST_NAME ASCENDING AND DEPARTMENT DESCENDING.

mysql> select * from worker order by FIRST_NAME asc, DEPARTMENT desc;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         6 | Amitabh    | Singh     |  50000 | 2014-03-20 09:00:00 | Account    |
|         2 | Amruta     | Dhumal    | 200000 | 2020-02-20 09:00:00 | HR         |
|         1 | Monika     | Singh     | 100000 | 2014-02-20 09:00:00 | HR         |
|         4 | Pranita    | Kadam     |  30000 | 2014-03-20 09:00:00 | Manager    |
|         3 | Sanjivani  | Kadam     | 300000 | 2014-02-20 09:00:00 | Admin      |
|         7 | Shivani    | Shejawal  |  50000 | 2022-03-20 09:00:00 | Admin      |
|         8 | Shivani    | Chauhan   |  90000 | 2022-03-20 09:00:00 | Admin      |
|         5 | Vipul      | Diwan     |  40000 | 2020-03-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.03 sec)

mysql> -- 10) WRITE AN SQL QUERY TO FETCH THE NAMES OF THE WORKERS WHO EARN THE HIGHEST SALARY.

mysql> select FIRST_NAME, LAST_NAME, SALARY
    -> FROM worker
    -> WHERE SALARY = (SELECT SALARY FROM Worker ORDER BY SALARY DESC LIMIT 1);
+------------+-----------+--------+
| FIRST_NAME | LAST_NAME | SALARY |
+------------+-----------+--------+
| Sanjivani  | Kadam     | 300000 |
+------------+-----------+--------+
1 row in set (0.01 sec)

mysql> -- 11) WRITE AN QUERY TO PRINT DETAILS OF WORKERS EXCLUDING FIRST_NAME'S Vipul AND 'Pranita' FROM WORKER TABLE

mysql> SELECT *
    -> FROM WORKER
    -> WHERE FIRST_NAME NOT IN ('Vipul', 'Pranita');
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Singh     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Amruta     | Dhumal    | 200000 | 2020-02-20 09:00:00 | HR         |
|         3 | Sanjivani  | Kadam     | 300000 | 2014-02-20 09:00:00 | Admin      |
|         6 | Amitabh    | Singh     |  50000 | 2014-03-20 09:00:00 | Account    |
|         7 | Shivani    | Shejawal  |  50000 | 2022-03-20 09:00:00 | Admin      |
|         8 | Shivani    | Chauhan   |  90000 | 2022-03-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
6 rows in set (0.02 sec)

mysql> -- 12) WRITE AN QUERY TO PRINT DETAILS OF WORKERS WHOSE FIRST_NAME ENDS WITH 'a' AND CONTAIN SIX ALPHABET.

mysql> SELECT *
    -> FROM WORKER
    -> WHERE RIGHT(FIRST_NAME,1) = 'a' AND LENGTH(FIRST_NAME)=6;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Singh     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Amruta     | Dhumal    | 200000 | 2020-02-20 09:00:00 | HR         |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set (0.01 sec)

mysql> -- 13) WRITE AN SQL QUERY TO PRINT DETAILS OF THE WORKERS WHO HAVE JOINED IN FEB 2014.

mysql> SELECT *
    -> FROM WORKER
    -> WHERE JOINING_DATE LIKE '2014-02-%';
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Singh     | 100000 | 2014-02-20 09:00:00 | HR         |
|         3 | Sanjivani  | Kadam     | 300000 | 2014-02-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
2 rows in set, 1 warning (0.01 sec)

mysql> -- 14) WRITE AN SQL QUERY TO FETCH DUPLICATE RECORDS HAVING MATCHING DATA IN SOME FIELDS OF A TABLE.

mysql> -- LET US ASSUME THAT WE WANT TO CHECK FOR DUPLICATE RECORDS WHICH HAVE MATCHING DATA IN THE SALARY AND DEPARTMENT FIELDS TOGETHER.
mysql> SELECT SALARY, DEPARTMENT ,COUNT(*)
    -> FROM WORKER
    -> GROUP BY  SALARY, DEPARTMENT
    -> HAVING COUNT(*)>1;
Empty set (0.01 sec)

mysql> -- 15) WRITE AN SQL QUERY TO CLONE A NEW TABLE FROM ANOTHER TABLE.

mysql> -- i) SIMPLE CLONING - COPIES THE ENTIRE TABLE STRUCTURE WITH THE DATA

mysql> CREATE TABLE WORKER_N SELECT * FROM WORKER;
Query OK, 8 rows affected (0.04 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> select * from WORKER_N;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Singh     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Amruta     | Dhumal    | 200000 | 2020-02-20 09:00:00 | HR         |
|         3 | Sanjivani  | Kadam     | 300000 | 2014-02-20 09:00:00 | Admin      |
|         4 | Pranita    | Kadam     |  30000 | 2014-03-20 09:00:00 | Manager    |
|         5 | Vipul      | Diwan     |  40000 | 2020-03-20 09:00:00 | Account    |
|         6 | Amitabh    | Singh     |  50000 | 2014-03-20 09:00:00 | Account    |
|         7 | Shivani    | Shejawal  |  50000 | 2022-03-20 09:00:00 | Admin      |
|         8 | Shivani    | Chauhan   |  90000 | 2022-03-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
8 rows in set (0.00 sec)

mysql> -- ii) SHALLOW CLONING -- SHOWS ONLY THE TABLE STRUCTURE. NO DATA IS COPIED.

mysql> CREATE TABLE WORKER_Ne LIKE WORKER;
Query OK, 0 rows affected (0.05 sec)
mysql> select * from WORKER_Ne;
Empty set (0.01 sec)

mysql> -- iii) DEEP CLONING

mysql> CREATE TABLE WORKER_NEW LIKE WORKER;

mysql> INSERT INTO WORKER_NEW SELECT * FROM WORKER;
Query OK, 8 rows affected (0.01 sec)
Records: 8  Duplicates: 0  Warnings: 0

mysql> select * from WORKER_NEW;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         1 | Monika     | Singh     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Amruta     | Dhumal    | 200000 | 2020-02-20 09:00:00 | HR         |
|         3 | Sanjivani  | Kadam     | 300000 | 2014-02-20 09:00:00 | Admin      |
|         4 | Pranita    | Kadam     |  30000 | 2014-03-20 09:00:00 | Manager    |
|         5 | Vipul      | Diwan     |  40000 | 2020-03-20 09:00:00 | Account    |
|         6 | Amitabh    | Singh     |  50000 | 2014-03-20 09:00:00 | Account    |
|         7 | Shivani    | Shejawal  |  50000 | 2022-03-20 09:00:00 | Admin      |
|         8 | Shivani    | Chauhan   |  90000 | 2022-03-20 09:00:00 | Admin      |
|         1 | Monika     | Singh     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Amruta     | Dhumal    | 200000 | 2020-02-20 09:00:00 | HR         |
|         3 | Sanjivani  | Kadam     | 300000 | 2014-02-20 09:00:00 | Admin      |
|         4 | Pranita    | Kadam     |  30000 | 2014-03-20 09:00:00 | Manager    |
|         5 | Vipul      | Diwan     |  40000 | 2020-03-20 09:00:00 | Account    |
|         6 | Amitabh    | Singh     |  50000 | 2014-03-20 09:00:00 | Account    |
|         7 | Shivani    | Shejawal  |  50000 | 2022-03-20 09:00:00 | Admin      |
|         8 | Shivani    | Chauhan   |  90000 | 2022-03-20 09:00:00 | Admin      |
|         1 | Monika     | Singh     | 100000 | 2014-02-20 09:00:00 | HR         |
|         2 | Amruta     | Dhumal    | 200000 | 2020-02-20 09:00:00 | HR         |
|         3 | Sanjivani  | Kadam     | 300000 | 2014-02-20 09:00:00 | Admin      |
|         4 | Pranita    | Kadam     |  30000 | 2014-03-20 09:00:00 | Manager    |
|         5 | Vipul      | Diwan     |  40000 | 2020-03-20 09:00:00 | Account    |
|         6 | Amitabh    | Singh     |  50000 | 2014-03-20 09:00:00 | Account    |
|         7 | Shivani    | Shejawal  |  50000 | 2022-03-20 09:00:00 | Admin      |
|         8 | Shivani    | Chauhan   |  90000 | 2022-03-20 09:00:00 | Admin      |
+-----------+------------+-----------+--------+---------------------+------------+
24 rows in set (0.00 sec)

mysql> -- 16) WRITE AN SQL QUERY TO FETCH INTERSECTING RECORDS OF TWO TABLES
mysql> -- LET'S CREATE TWO TABLES

mysql> CREATE TABLE LIST1
    -> (
    -> ID INT,
    -> NAME VARCHAR(100)
    -> );

mysql> INSERT INTO LIST1
    -> VALUES
    ->  (1,"Meera"),
    ->  (2,"Gowri");
Query OK, 2 rows affected (0.01 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> CREATE TABLE LIST2 LIKE LIST1;

mysql> INSERT INTO LIST2
    -> VALUES
    -> (2,"Gowri"),
    -> (3,"Ved");
Query OK, 2 rows affected (0.00 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql>SELECT * FROM LIST1
    ->INTERSECT
    ->SELECT * FROM LIST2; 
    ->-- MySQL DOES NOT SUPPORT INTERSECT. 

mysql> -- 17) WRITE AN SQL QUERY TO SHOW RECORDS FROM ONE TABLE THAT ANOTHER TABLE DOES NOT HAVE.

mysql> SELECT * FROM LIST
    -> MINUS
    -> SELECT * FROM LIST2;

mysql> -- 18) WRITE AN SQL QUERY TO SHOW THE TOP N (SAY 10) RECORDS OF THE TABLE.

mysql> SELECT *
    -> FROM WORKER
    -> ORDER BY SALARY DESC
    -> LIMIT 5;
+-----------+------------+-----------+--------+---------------------+------------+
| WORKER_ID | FIRST_NAME | LAST_NAME | SALARY | JOINING_DATE        | DEPARTMENT |
+-----------+------------+-----------+--------+---------------------+------------+
|         3 | Sanjivani  | Kadam     | 300000 | 2014-02-20 09:00:00 | Admin      |
|         2 | Amruta     | Dhumal    | 200000 | 2020-02-20 09:00:00 | HR         |
|         1 | Monika     | Singh     | 100000 | 2014-02-20 09:00:00 | HR         |
|         8 | Shivani    | Chauhan   |  90000 | 2022-03-20 09:00:00 | Admin      |
|         6 | Amitabh    | Singh     |  50000 | 2014-03-20 09:00:00 | Account    |
+-----------+------------+-----------+--------+---------------------+------------+
5 rows in set (0.01 sec)

mysql> -- 19) WRITE AN SQL QUERY TO DETERMINE THE NTH(SAY N=5) HIGHEST SALARY FROM A TABLE.

mysql> SELECT SALARY
    -> FROM WORKER
    -> ORDER BY SALARY DESC
    -> LIMIT 4,1;  -- 4=N-1
+--------+
| SALARY |
+--------+
|  50000 |
+--------+
1 row in set (0.00 sec)

mysql> -- 20) WRITE AN SQL QUERY TO FETCH THE LIST OF EMPLOYEES WITH THE SAME SALARY

mysql> SELECT W1.FIRST_NAME, W1.LAST_NAME
    -> FROM WORKER W1 JOIN WORKER W2
    -> WHERE W1.SALARY= W2.SALARY
    -> AND W1.WORKER_ID != W2.WORKER_ID;
+------------+-----------+
| FIRST_NAME | LAST_NAME |
+------------+-----------+
| Shivani    | Shejawal  |
| Amitabh    | Singh     |
+------------+-----------+
2 rows in set (0.01 sec)


